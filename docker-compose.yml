version: "3.9"

services:
  postgres:
    image: ankane/pgvector
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: securepass123
      POSTGRES_DB: chatbot_db
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  n8n:
    image: n8nio/n8n
    ports:
      - "5678:5678"
    depends_on:
      - postgres
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n_db
      - DB_POSTGRESDB_USER=user
      - DB_POSTGRESDB_PASSWORD=securepass123
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=securepass
      - N8N_PERSONAL_MODE=false
      - N8N_ENCRYPTION_KEY=some-long-static-secret-key
    volumes:
      - ./n8n_data:/home/node/.n8n

  langchain-server:
    build: ./langchain-server
    ports:
      - "3000:3000"
    env_file: .env
    volumes:
      - ./langchain-server:/app

  chatbot-server:
    build: ./chatbot_server
    ports:
      - "8001:8001"
    depends_on:
      - postgres
    env_file: .env
    environment:
      - DATABASE_URL=postgresql://user:securepass123@postgres:5432/chatbot_db
    volumes:
      - .:/app
      - ./pdfs:/app/pdfs

  watcher:
    build:
      context: ./chatbot_server
      dockerfile: Dockerfile   # reuse same image as chatbot-server
    command: python synced_ingest.py
    volumes:
      - .:/app                # code + pdfs
    depends_on:
      - chatbot-server
      - postgres

volumes:
  pgdata:
